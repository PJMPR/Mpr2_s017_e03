package dao;

import dao.mappers.IMapResultSetIntoEntity;
import dao.repositories.IPersonRepository;
import domain.model.Person;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class PersonRepository extends RepositoryBase<Person> implements IPersonRepository {

    public PersonRepository(Connection connection, IMapResultSetIntoEntity<Person> mapper) {
        super(connection, mapper);
    }


    public List<Person> withName(String name) {
        List<Person> people = new ArrayList<Person>();
        for (int i = 0; i < people.size(); i++) {
            if (people.get(i).getName().equals(name)) {
                return people;
            }
        }
        return null;
    }

    public List<Person> withSurname(String surname) {
        List<Person> people = new ArrayList<Person>();
        for (int i = 0; i < people.size(); i++) {
            if (people.get(i).getSurname().equals(surname)) {
                return people;
            }
        }
        return null;
    }


    @Override
    protected String createTableSql() {
        return "" + "CREATE TABLE people("
                + "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
                + "name varchar(20)," + "surname varchar(50)" + ")";
    }

    @Override
    protected String tableName() {
        return "people";
    }

    protected String insertSql() {
        return "INSERT INTO people(name, surname) VALUES (?,?)";
    }

    protected String updateSql() {
        return "UPDATE people SET (name, surname)=(?,?) WHERE id=?";
    }


    @Override
    protected void setUpdate(Person entity) throws SQLException {
        update.setString(1, entity.getName());
        update.setString(2, entity.getSurname());

    }

    @Override
    protected void setInsert(Person entity) throws SQLException {
        insert.setString(1, entity.getName());
        insert.setString(2, entity.getSurname());
    }

}
