package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import domain.model.EnumDictionary;;

public class EnumDictionaryRepository extends RepositoryBase {

	String insertSql = "INSERT INTO enumDictionary(intKey, stringKey, value, enumerationName) VALUES (?,?,?,?)";
	String selectByIdSql = "SELECT * FROM enumDictionary WHERE id=?";
	
	PreparedStatement insert;
	PreparedStatement selectById;
	
	public EnumDictionaryRepository(Connection connection) {
		super(connection);
		try {
			insert = connection.prepareStatement(insertSql);
			selectById = connection.prepareStatement(selectByIdSql);
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public EnumDictionary get(int enumDictionaryId){
		try{
			selectById.setInt(1, enumDictionaryId);
			ResultSet rs = selectById.executeQuery();
			while(rs.next()){
				EnumDictionary result = new EnumDictionary();
				result.setId(rs.getInt("id"));
				result.setIntKey(rs.getInt("intKey"));
				result.setStringKey(rs.getString("stringKey"));
				result.setValue(rs.getString("value"));
				result.setEnumerationName(rs.getString("enumerationName"));
				return result;
			}
		}
		catch(SQLException ex){
			ex.printStackTrace();
		}
		return null;
		
	}
	
	public void add(EnumDictionary enumDictionary) {
		try {
			insert.setInt(1, enumDictionary.getIntKey());
			insert.setString(2, enumDictionary.getStringKey());
			insert.setString(3, enumDictionary.getValue());
			insert.setString(4, enumDictionary.getEnumerationName());
			insert.executeUpdate();
		} catch (SQLException ex) {
			ex.printStackTrace();
		}
	}

	@Override
	protected String createTableSql() {
		return "CREATE TABLE enumDictionary("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
				+ "intKey bigint," 
				+ "stringKey varchar(50)," 
				+ "value varchar(50)," 
				+ "enumerationName varchar(50)" 
				+ ")";
	}

	@Override
	protected String tableName() {
		return "enumDictionary";
	}
	
}
