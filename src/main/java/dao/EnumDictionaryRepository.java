package dao;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import domain.model.EnumDictionary;

public class EnumDictionaryRepository extends RepositoryBase<EnumDictionary> {

	public EnumDictionaryRepository(Connection connection) {
		super(connection);
	}

	public EnumDictionary get(int enumDictionaryId) {
		try {
			selectById.setInt(1, enumDictionaryId);
			ResultSet rs = selectById.executeQuery();
			while (rs.next()) {
				EnumDictionary result = new EnumDictionary();
				result.setId(rs.getInt("id"));
				result.setIntKey(rs.getInt("intKey"));
				result.setStringKey(rs.getString("stringKey"));
				result.setValue(rs.getString("value"));
				result.setEnumerationName(rs.getString("enumerationName"));
				return result;
			}
		} catch (SQLException ex) {
			ex.printStackTrace();
		}
		return null;

	}

	public List<EnumDictionary> getAll() {
		try {
			ResultSet rs = selectAll.executeQuery();
			List<EnumDictionary> result = new ArrayList<EnumDictionary>();
			while (rs.next()) {
				EnumDictionary enumDictionary = new EnumDictionary();
				enumDictionary.setId(rs.getInt("id"));
				enumDictionary.setIntKey(rs.getInt("intKey"));
				enumDictionary.setStringKey(rs.getString("stringKey"));
				enumDictionary.setValue(rs.getString("value"));
				enumDictionary.setEnumerationName(rs
						.getString("enumerationName"));
				result.add(enumDictionary);
			}
			return result;
		} catch (SQLException ex) {
			ex.printStackTrace();
		}
		return null;
	}

	@Override
	protected String createTableSql() {
		return "CREATE TABLE enumDictionary("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
				+ "intKey bigint," + "stringKey varchar(50),"
				+ "value varchar(50)," + "enumerationName varchar(50)" + ")";
	}

	@Override
	protected String tableName() {
		return "enumDictionary";
	}

	protected String insertSql() {
		return "INSERT INTO enumDictionary(intKey, stringKey, value, enumerationName) VALUES (?,?,?,?)";
	}

	protected String updateSql() {
		return "UPDATE enumDictionary SET (intKey, stringKey, value, enumerationName)=(?,?,?,?) WHERE id=?";
	}

	@Override
	protected void setUpdate(EnumDictionary entity) throws SQLException {
		update.setInt(1, entity.getIntKey());
		update.setString(2, entity.getStringKey());
		update.setString(3, entity.getValue());
		update.setString(4, entity.getEnumerationName());	
	}

	@Override
	protected void setInsert(EnumDictionary entity) throws SQLException {
		insert.setInt(1, entity.getIntKey());
		insert.setString(2, entity.getStringKey());
		insert.setString(3, entity.getValue());
		insert.setString(4, entity.getEnumerationName());
	}

}
