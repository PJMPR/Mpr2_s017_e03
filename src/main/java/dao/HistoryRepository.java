package dao;

import dao.mappers.IMapResultSetIntoEntity;
import domain.model.History;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * Created by L on 05.11.2016.
 */
public class HistoryRepository extends RepositoryBase<History> {


    public HistoryRepository(Connection connection, IMapResultSetIntoEntity<History> mapper) {
        super(connection, mapper);

    }

    @Override
    protected String createTableSql() {
        return "" + "CREATE TABLE history("
                + "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,"
                + "date DATE,"
                + "amount DECIMAL,"
                + "rate DOUBLE,"
                + "WALLET_FROM_ID int,"
                + "WALLTET_TO_ID int,"
                + "OPERATION_ID int,"
                + "FOREIGN KEY (WALLET_FROM_ID) REFERENCES wallet(id),"
                + "FOREIGN KEY (WALLTET_TO_ID) REFERENCES wallet(id),"
                + "FOREIGN KEY (OPERATION_ID) REFERENCES operations(id)"
                + ")";
    }

    @Override
    protected String tableName() {
        return "History";

    }

    public History get(Integer id) {
        try {
            selectById.setInt(1, id);
            ResultSet rs = selectById.executeQuery();
            while (rs.next()) {
                History result = new History();
                result.setId(rs.getInt("id"));
                result.setDate(rs.getDate("date"));
                result.setAmount(rs.getFloat("amount"));
                result.setRate(rs.getDouble("rate"));
                result.setFromWalletId(rs.getInt("wallet_from_id"));
                result.setToWalletId(rs.getInt("wallet_to_id"));
                result.setOperationId(rs.getInt("operation_id"));
                return result;
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        return null;

    }

    @Override
    protected String insertSql() {
        return "INSERT INTO history("
                + "date, amount, rate,"
                + " WALLET_FROM_ID,"
                + " WALLTET_TO_ID,"
                + "OPERATION_ID"
                + ") VALUES (?,?,?,?,?,?)";
    }

    @Override
    protected String updateSql() {
        return "UPDATE HISTORY SET (date, amount, rate, WALLET_FROM_ID" +
                ", WALLET_TO_ID, OPERATION_ID)= (?,?,?,?,?,?) WHERE id = ?";
    }

    @Override
    protected void setUpdate(History history) throws SQLException {
        update.setDate(1, history.getDate());
        update.setFloat(2, history.getAmount());
        update.setDouble(3, history.getRate());
        update.setInt(4, history.getFromWalletId());
        update.setInt(5, history.getToWalletId());

    }

    @Override
    protected void setInsert(History history) throws SQLException {
        insert.setDate(1, history.getDate());
        insert.setDouble(2, history.getAmount());
        insert.setDouble(3, history.getRate());
        insert.setInt(4, history.getFromWalletId());
        insert.setInt(5, history.getToWalletId());
    }
}
